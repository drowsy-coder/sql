-- Creating tables with a suffix "_regno" to denote registration number as requested
CREATE TABLE Student_regno (
    RegNo VARCHAR2(20),
    Name VARCHAR2(100),
    Year NUMBER,
    Dept VARCHAR2(50)
);

CREATE TABLE Course_regno (
    CCode VARCHAR2(20),
    Cname VARCHAR2(100),
    RegNo VARCHAR2(20)
);

-- Inserting data into Student_regno
INSERT INTO Student_regno VALUES ('001', 'Alice', 3, 'CSE');
INSERT INTO Student_regno VALUES ('002', 'Bob', 2, 'ECE');
INSERT INTO Student_regno VALUES ('003', 'Charlie', 1, 'MECH');
INSERT INTO Student_regno VALUES ('004', 'David', 4, 'CSE');
INSERT INTO Student_regno VALUES ('005', 'Eve', 3, 'IT');

-- Inserting data into Course_regno
INSERT INTO Course_regno VALUES ('CSE101', 'Database Systems', '001');
INSERT INTO Course_regno VALUES ('ECE102', 'Circuits', '002');
INSERT INTO Course_regno VALUES ('MECH103', 'Thermodynamics', '003');
INSERT INTO Course_regno VALUES ('CSE104', 'Operating Systems', '004');
INSERT INTO Course_regno VALUES ('IT105', 'Web Development', '005');

-- Display RegNo, Name, Cname from the given relations
SELECT s.RegNo, s.Name, c.Cname
FROM Student_regno s
JOIN Course_regno c ON s.RegNo = c.RegNo;

-- Display the student name, course name where the join condition is met
SELECT s.Name, c.Cname
FROM Student_regno s
JOIN Course_regno c ON s.RegNo = c.RegNo;

-- Display the studentsâ€™ detail where the tuples are matching in both tables and all the records from student table
SELECT s.*
FROM Student_regno s
LEFT JOIN Course_regno c ON s.RegNo = c.RegNo;

-- Display the students detail from student table where the tuples from student table do not match with course table
SELECT s.*
FROM Student_regno s
LEFT JOIN Course_regno c ON s.RegNo = c.RegNo
WHERE c.RegNo IS NULL;

-- Display the students detail where the tuples are matching in both tables and the all the records from course table
SELECT c.*
FROM Course_regno c
LEFT JOIN Student_regno s ON c.RegNo = s.RegNo;

-- Display the course detail from course table where the tuples from course table do not match with student table
SELECT c.*
FROM Course_regno c
LEFT JOIN Student_regno s ON c.RegNo = s.RegNo
WHERE s.RegNo IS NULL;

-- Display all details from both the tables by using full join
SELECT *
FROM Student_regno s
FULL JOIN Course_regno c ON s.RegNo = c.RegNo;

-- Creating tables
CREATE TABLE Stock_regno (
    ProductId VARCHAR2(20),
    Pname VARCHAR2(100),
    Quantity NUMBER
);

CREATE TABLE Order_regno (
    OrderNo VARCHAR2(20),
    ProductId VARCHAR2(20),
    qty NUMBER
);

-- Inserting data into Stock_regno
INSERT INTO Stock_regno VALUES ('P001', 'Laptop', 15);
INSERT INTO Stock_regno VALUES ('P002', 'Mouse', 150);
INSERT INTO Stock_regno VALUES ('P003', 'Keyboard', 85);
INSERT INTO Stock_regno VALUES ('P004', 'Monitor', 45);
INSERT INTO Stock_regno VALUES ('P005', 'USB Cable', 120);

-- Inserting data into Order_regno
INSERT INTO Order_regno VALUES ('O001', 'P001', 2);
INSERT INTO Order_regno VALUES ('O002', 'P002', 5);
INSERT INTO Order_regno VALUES ('O003', 'P003', 1);
INSERT INTO Order_regno VALUES ('O004', 'P004', 3);
INSERT INTO Order_regno VALUES ('O005', 'P006', 7); -- P006 does not exist in Stock_regno

-- Fetch all the rows from both tables where there is a matching ProductId in both tables
SELECT *
FROM Stock_regno s
JOIN Order_regno o ON s.ProductId = o.ProductId;

-- Fetch all the rows from stock table and there is a matching ProductId in both tables
SELECT s.*
FROM Stock_regno s
JOIN Order_regno o ON s.ProductId = o.ProductId;

-- Fetch all the rows from stock table where ProductId is not matching in both tables
SELECT s.*
FROM Stock_regno s
LEFT JOIN Order_regno o ON s.ProductId = o.ProductId
WHERE o.ProductId IS NULL;

-- Fetch all the rows from order table and there is a matching ProductId in both tables
SELECT o.*
FROM Order_regno o
JOIN Stock_regno s ON o.ProductId = s.ProductId;

-- Fetch all the rows from order table where ProductId is not matching in both tables
SELECT o.*
FROM Order_regno o
LEFT JOIN Stock_regno s ON o.ProductId = s.ProductId
WHERE s.ProductId IS NULL;

-- Fetch all the rows from stock and order tables
SELECT *
FROM Stock_regno s
FULL JOIN Order_regno o ON s.ProductId = o.ProductId;
